<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessForClients" xml:space="preserve">
    <value>Access  for clients</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="ATM" xml:space="preserve">
    <value>ATM</value>
  </data>
  <data name="AtmGroups" xml:space="preserve">
    <value>Atm groups</value>
  </data>
  <data name="AtmNumber" xml:space="preserve">
    <value>Atm number</value>
  </data>
  <data name="CashWithdrawal" xml:space="preserve">
    <value>Cash withdrawal</value>
  </data>
  <data name="CommunicationAvailability" xml:space="preserve">
    <value>Communication availability</value>
  </data>
  <data name="Department" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="GetCash" xml:space="preserve">
    <value>Receiving cash</value>
  </data>
  <data name="GetStatements" xml:space="preserve">
    <value>Get statements</value>
  </data>
  <data name="MakingPayments" xml:space="preserve">
    <value>Making payments</value>
  </data>
  <data name="Region" xml:space="preserve">
    <value>Region</value>
  </data>
  <data name="SN" xml:space="preserve">
    <value>Serial number</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="AppearTime" xml:space="preserve">
    <value>Appear time</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="Critical" xml:space="preserve">
    <value>Critical</value>
  </data>
  <data name="CurrentState" xml:space="preserve">
    <value>Current state</value>
  </data>
  <data name="EventMessage" xml:space="preserve">
    <value>Event message</value>
  </data>
  <data name="FinancialInstitute" xml:space="preserve">
    <value>Financial institute</value>
  </data>
  <data name="IncidentNumber" xml:space="preserve">
    <value>Incident number</value>
  </data>
  <data name="Model" xml:space="preserve">
    <value>Model</value>
  </data>
  <data name="Number" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="Place" xml:space="preserve">
    <value>Place</value>
  </data>
  <data name="SendOrderTime" xml:space="preserve">
    <value>Send order time</value>
  </data>
  <data name="SupposedRepairTime" xml:space="preserve">
    <value>Supposed repair time</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="AssignedTo" xml:space="preserve">
    <value>Assigned to</value>
  </data>
  <data name="AtmName" xml:space="preserve">
    <value>Atm name</value>
  </data>
  <data name="Autor" xml:space="preserve">
    <value>Autor</value>
  </data>
  <data name="BankDivision" xml:space="preserve">
    <value>Bank division</value>
  </data>
  <data name="ChangeData" xml:space="preserve">
    <value>Change data</value>
  </data>
  <data name="Condition" xml:space="preserve">
    <value>Condition</value>
  </data>
  <data name="Count" xml:space="preserve">
    <value>Count</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="DateTime" xml:space="preserve">
    <value>Date and time</value>
  </data>
  <data name="DateTimeMin" xml:space="preserve">
    <value>Date of reaching the minimum balance</value>
  </data>
  <data name="DateTimeZero" xml:space="preserve">
    <value>Date of complete emptying of cassettes</value>
  </data>
  <data name="DayOfWeek" xml:space="preserve">
    <value>Day of week</value>
  </data>
  <data name="Direction" xml:space="preserve">
    <value>Direction</value>
  </data>
  <data name="DispCass" xml:space="preserve">
    <value>Issued from {0}th cassette</value>
  </data>
  <data name="Dispense" xml:space="preserve">
    <value>Dispense</value>
  </data>
  <data name="EncashHours" xml:space="preserve">
    <value>Encash hours</value>
  </data>
  <data name="Encashman" xml:space="preserve">
    <value>Encashman</value>
  </data>
  <data name="EUR" xml:space="preserve">
    <value>EUR</value>
  </data>
  <data name="EventName" xml:space="preserve">
    <value>Event name</value>
  </data>
  <data name="FinishDateTime" xml:space="preserve">
    <value>Finish datetime</value>
  </data>
  <data name="ForcastWithdraw" xml:space="preserve">
    <value>Forcast withdraw</value>
  </data>
  <data name="HourCount" xml:space="preserve">
    <value>Hour сount</value>
  </data>
  <data name="IncidentCondition" xml:space="preserve">
    <value>Incident condition</value>
  </data>
  <data name="IpAddress" xml:space="preserve">
    <value>IP address</value>
  </data>
  <data name="MaxSum" xml:space="preserve">
    <value>Max sum</value>
  </data>
  <data name="MessageText" xml:space="preserve">
    <value>Message text</value>
  </data>
  <data name="MinAmount" xml:space="preserve">
    <value>Min amount</value>
  </data>
  <data name="Problem" xml:space="preserve">
    <value>Problem</value>
  </data>
  <data name="Remain" xml:space="preserve">
    <value>Remain</value>
  </data>
  <data name="RemainForcast" xml:space="preserve">
    <value>Remain forcast</value>
  </data>
  <data name="Responsibility" xml:space="preserve">
    <value>Responsibility</value>
  </data>
  <data name="ResponsibleFor" xml:space="preserve">
    <value>Responsible for</value>
  </data>
  <data name="RouteNumber" xml:space="preserve">
    <value>Route number</value>
  </data>
  <data name="RUB" xml:space="preserve">
    <value>RUB</value>
  </data>
  <data name="StartDateTime" xml:space="preserve">
    <value>Start datetime</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="TimeCreated" xml:space="preserve">
    <value>Time сreated</value>
  </data>
  <data name="TimeProceedToService" xml:space="preserve">
    <value>Time proceed to service</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="Town" xml:space="preserve">
    <value>Town</value>
  </data>
  <data name="Track2Data" xml:space="preserve">
    <value>Map</value>
  </data>
  <data name="USD" xml:space="preserve">
    <value>USD</value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="Withdraw" xml:space="preserve">
    <value>Withdraw</value>
  </data>
  <data name="WorkHours" xml:space="preserve">
    <value>Work hours</value>
  </data>
  <data name="CashBalance" xml:space="preserve">
    <value>Cash balance</value>
  </data>
  <data name="Cassette" xml:space="preserve">
    <value>Cassette</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>from</value>
  </data>
  <data name="GeneralForecast" xml:space="preserve">
    <value>General forecast</value>
  </data>
  <data name="ReportOnCashBalancesBNA" xml:space="preserve">
    <value>The report of cash balances (BNA)</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>to</value>
  </data>
  <data name="TotalAmount" xml:space="preserve">
    <value>Total amount of currencies</value>
  </data>
  <data name="TotalAmountOfBalancesForAGroupOfAtms" xml:space="preserve">
    <value>The total amount of balances for a group of ATMs</value>
  </data>
  <data name="WithdrawCashForecast" xml:space="preserve">
    <value>Withdraw cash forecast</value>
  </data>
  <data name="ReportOnCashBalances_Dispenser" xml:space="preserve">
    <value>The report of cash balances (dispenser)</value>
  </data>
  <data name="IncidentReport" xml:space="preserve">
    <value>Incident Report</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="ReportOnTheEliminationOfIncidents" xml:space="preserve">
    <value>The report of elimination of incidents</value>
  </data>
  <data name="UserOfM3WEB" xml:space="preserve">
    <value>User Of M3 WEB</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="NotInitialized" xml:space="preserve">
    <value>Not initialized</value>
  </data>
  <data name="BreakingOtherReasons" xml:space="preserve">
    <value>Breaking other reasons</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DeadlineForRecovery" xml:space="preserve">
    <value>Deadline for recovery</value>
  </data>
  <data name="FaultDescription" xml:space="preserve">
    <value>Fault description</value>
  </data>
  <data name="FaultReceiptPrinter" xml:space="preserve">
    <value>Fault receipt printer</value>
  </data>
  <data name="LackOfCash" xml:space="preserve">
    <value>Lack of cash</value>
  </data>
  <data name="LackOfCommunication" xml:space="preserve">
    <value>Lack of communication</value>
  </data>
  <data name="MonitoringService" xml:space="preserve">
    <value>Monitoring service</value>
  </data>
  <data name="NoConnection" xml:space="preserve">
    <value>No connection</value>
  </data>
  <data name="ReportMonitoringServiceATMs" xml:space="preserve">
    <value>The report of monitoring service ATMs</value>
  </data>
  <data name="SimplyBecauseOfTheLackOfCash" xml:space="preserve">
    <value>Simply because of the lack of cash</value>
  </data>
  <data name="TemporarilyNotWorking" xml:space="preserve">
    <value>Temporarily not working</value>
  </data>
  <data name="ThePaperEnds_JournalPrinter" xml:space="preserve">
    <value>The paper ends. Journal printer</value>
  </data>
  <data name="ThePaperEnds_ReceiptPrinter" xml:space="preserve">
    <value>The paper ends. Receipt printer</value>
  </data>
  <data name="WaitingForRepairs" xml:space="preserve">
    <value>Waiting for repairs</value>
  </data>
  <data name="AvailabilityOfAtmNetwork" xml:space="preserve">
    <value>The availability of ATM network</value>
  </data>
  <data name="Events" xml:space="preserve">
    <value>Events</value>
  </data>
  <data name="ReportOnAvailability" xml:space="preserve">
    <value>The report on availability</value>
  </data>
  <data name="ReportOnTheEventsAtTheAtm" xml:space="preserve">
    <value>The report of events at the ATM</value>
  </data>
  <data name="InService" xml:space="preserve">
    <value>In service</value>
  </data>
  <data name="OutOfService" xml:space="preserve">
    <value>Out of service</value>
  </data>
  <data name="RegisteredAtms" xml:space="preserve">
    <value>Registered ATMs</value>
  </data>
  <data name="ReportRegisteredAtmsOf" xml:space="preserve">
    <value>The report registered ATMs of</value>
  </data>
  <data name="Dispenser" xml:space="preserve">
    <value>Dispenser</value>
  </data>
  <data name="Incidents" xml:space="preserve">
    <value>Incidents</value>
  </data>
  <data name="Working" xml:space="preserve">
    <value>Working</value>
  </data>
  <data name="Availability" xml:space="preserve">
    <value>Availability</value>
  </data>
  <data name="of" xml:space="preserve">
    <value>of</value>
  </data>
  <data name="Less" xml:space="preserve">
    <value>Less than</value>
  </data>
  <data name="More" xml:space="preserve">
    <value>More than</value>
  </data>
  <data name="ReportCreated" xml:space="preserve">
    <value>Report created</value>
  </data>
  <data name="ReportSummaryIncidents" xml:space="preserve">
    <value>Incident report</value>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="ReportSummaryIncidentsWorkingIncidents" xml:space="preserve">
    <value>Working incident report</value>
  </data>
  <data name="ReportUserActions" xml:space="preserve">
    <value>The report of user actions</value>
  </data>
  <data name="UserActions" xml:space="preserve">
    <value>User actions</value>
  </data>
  <data name="fromAtm" xml:space="preserve">
    <value>from ATM</value>
  </data>
  <data name="fromHost" xml:space="preserve">
    <value>from the host</value>
  </data>
  <data name="MessageHistory" xml:space="preserve">
    <value>Message history</value>
  </data>
  <data name="NotDetermined" xml:space="preserve">
    <value>Not determined</value>
  </data>
  <data name="ReportMessages" xml:space="preserve">
    <value>The report of messages</value>
  </data>
  <data name="Registered" xml:space="preserve">
    <value>Registered</value>
  </data>
  <data name="ReportIncidentTable" xml:space="preserve">
    <value>Incident table report</value>
  </data>
</root>